public void prints(string s)
public void printr(number r)
public integer atoi(string s)
public integer rand ()

public integer entry (integer argc, string *argv, string *envp) {

    integer initialCnt := 0
    integer cnt := initialCnt
    integer accumulator := 0
    number mean := 0

    if isValidInput(argc, argv) <> 0 then {

        prints("Invalid arguments")
        entry := 1

    } else {

        initialCnt := atoi(argv[1])     == to keep track of the initial value
        cnt := initialCnt

        do {
            accumulator := accumulator + rand()
            cnt := cnt - 1

        } while cnt > 0;

        mean := accumulator / initialCnt
        printr(mean)

        entry := 0
    }
};

public integer isValidInput(integer argc, string *argv) { 

    == check wether the argc and argv is valid
    isValidInput := 0
    integer input := atoi(argv[1])

    if argc < 2 { isValidInput := -1 }
    if input <= 0 then { isValidInput := -1 } == 0 is the what atoi returns when it cant parse an int
};